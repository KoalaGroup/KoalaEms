/*
 * pairarr_map.cc
 *
 * created 14.09.96 PW
 */

#include <pairarr_map.hxx>
#include <versions.hxx>

VERSION("Nov 16 2004", __FILE__, __DATE__, __TIME__,
"$ZEL: pairarr_map.cc,v 1.3 2004/11/26 23:03:53 wuestner Exp $")
#define XVERSION

/*****************************************************************************/

C_pairarr_map::C_pairarr_map(const char* filename)
{
}

/*****************************************************************************/

C_pairarr_map::~C_pairarr_map()
{}

/*****************************************************************************/

void C_pairarr_map::flush(void)
{
}

/*****************************************************************************/

int C_pairarr_map::checkidx(int idx)
{
return 0;
}

/*****************************************************************************/

int C_pairarr_map::size(void)
{
throw 0;
return 0;
}

/*****************************************************************************/

int C_pairarr_map::notempty(void) const
{
throw 0;
return 0;
}

/*****************************************************************************/

int C_pairarr_map::empty(void) const
{
throw 0;
return 0;
}

/*****************************************************************************/

void C_pairarr_map::add(double, double)
{
throw 0;
}

/*****************************************************************************/

int C_pairarr_map::limit(void) const
{
throw 0;
return 0;
}

/*****************************************************************************/

void C_pairarr_map::limit(int)
{
throw 0;
}

/*****************************************************************************/

void C_pairarr_map::forcelimit(void)
{
}

/*****************************************************************************/

int C_pairarr_map::rightidx(double, int)
{
throw 0;
return 0;
}

/*****************************************************************************/

int C_pairarr_map::leftidx(double, int)
{
throw 0;
return 0;
}

/*****************************************************************************/

double C_pairarr_map::val(int)
{
throw 0;
return 0;
}

/*****************************************************************************/

double C_pairarr_map::time(int)
{
throw 0;
return 0;
}

/*****************************************************************************/

double C_pairarr_map::maxtime()
{
throw 0;
return 0;
}

/*****************************************************************************/

void C_pairarr_map::clear(void)
{
throw 0;
}

/*****************************************************************************/

int C_pairarr_map::getmaxxvals(double&, double&)
{
throw 0;
return 0;
}

/*****************************************************************************/

const vt_pair* C_pairarr_map::operator [](int)
{
throw 0;
return 0;
}

/*****************************************************************************/

void C_pairarr_map::print(ostream&) const
{
throw 0;
}

/*****************************************************************************/
/*****************************************************************************/
