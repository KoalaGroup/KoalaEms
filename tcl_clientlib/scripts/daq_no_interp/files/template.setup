set vedname abcd
set description {Testserver für Sync}

set triggermaster 1
set eventbuilder 1

set isid(1) 1
set isid(2) 2
set isid(3) 5


set modullist {1 xaa 2 xab 3 xac 4 xad 5 xae}
set memberlist(1) {1 2}
set memberlist(2) {3 4 5}
# 3 has no members

set vars(1) 2
set var_init(1) "1111 2222"
set vars(10) 1
# 10 is left initialized

# setup for is 1, triggerset 1 --> 1.1
set readouttrigg(1.1) {1}
set readoutprio(1.1) 1
set readoutproc(1.1) {FERAreadoutZEL {}}
# setup for is 2, triggerset 1 --> 2.1
set readouttrigg(2.1) {1 2 3}
set readoutprio(2.1) 1
set readoutproc(2.1) {FERAreadoutZEL {} Echo {17 18}}
# setup for is 2, triggerset 2 --> 2.2
set readouttrigg(2.2) {4}
set readoutprio(2.2) 2
set readoutproc(2.2) {FERAreadoutZEL {}}
# is 3 has no readout

set dataout(0) {cluster 1 0 null}

set trigger {zel '/tmp/sync0' 1 10 2 1}

# wird nur einmal ausgefuehrt
set init_proclist(0) {CCCI {0}}
# wird vor jedem Start ausgefuehrt
set start_proclist(1) {Ferareset {17}}
# wird nach jedem Stop ausgefuehrt
set reset_proclist(1) {Ferareset {17}}

# wird nur einmal ausgefuehrt
set init_proclist_t {InitPCITrigger {'/tmp/sync0' 0} CCCZ {1}}
# wird vor jedem Start ausgefuehrt
set start_proclist_t {InitPCITrigger {'/tmp/sync0' 0} CCCZ {1}}
# wird nach jedem Stop ausgefuehrt
set reset_proclist_t {InitPCITrigger {'/tmp/sync0' 0} CCCZ {1}}

# wird ausgefuehrt als eval $procedurename ved is $argumentlist
set init_command(0) procedurename
set init_args(0) argumentlist
set start_command(0) procedurename
set start_args(0) argumentlist
set reset_command(0) procedurename
set reset_args(0) argumentlist
