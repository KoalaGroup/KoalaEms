proc start_all {} {
  variable ::server::cc
  variable ::server::ser
  variable ::server::em
  global veds

  foreach i $em {
    if [catch {$veds($i) readout start} mist] {
      puts "$i: $mist"
    }
  }
  foreach i $ser {
    if [catch {$veds($i) readout start} mist] {
      puts "$i: $mist"
    }
  }
  foreach i $cc {
    if [catch {$veds($i) readout start} mist] {
      puts "$i: $mist"
    }
  }
  stat_all all
}

proc do_stat_names {i} {
  switch -exact $i {
    0 {set stat "running"}
    1 {set stat "neverstarted"}
    2 {set stat "done"}
    3 {set stat "error"}
    4 {set stat "flushing"}
    default {set stat $i}
  }
return $stat
}

proc stat_class {list} {
  global veds
  set ok 1
  foreach i $list {
    if [catch {set ro_stat [$veds($i) readout status]} mist] {
      puts "$i readout status: $mist"
    } else {
      if {[lindex $ro_stat 0]=="running"} {set ok 0}
      puts -nonewline "$i: $ro_stat"
    }
    if [catch {set do_stat [$veds($i) dataout status 0]} mist] {
      puts "$i dataout status: $mist"
    } else {
      set stat [lindex $do_stat 1]
      if {$stat==0 || $stat==4} {set ok 0}
      puts "; dataout [do_stat_names $stat]"
    }
  }
  return $ok
}

proc stat_all {what} {
  variable ::server::cc
  variable ::server::ser
  variable ::server::em

  set ok 1
  if {$what=="all" || $what=="cc"} {
    set ok [expr $ok && [stat_class $cc]]
  }
  if {$what=="all" || $what=="ser"} {
    set ok [expr $ok && [stat_class $ser]]
  }
  if {$what=="all" || $what=="eb"} {
    set ok [expr $ok && [stat_class $em]]
  }
  return $ok
}
