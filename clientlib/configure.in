dnl Process this file with autoconf to produce a configure script.
dnl $ems/clientlib
dnl $ZEL: configure.in,v 2.22 2017/10/21 19:10:02 wuestner Exp $

AC_INIT(clientcomm.h)
AC_CONFIG_AUX_DIR($srcdir/../confsupp)

lems=/usr/local/ems
AC_PREFIX_DEFAULT(/usr/local/ems)

dnl should we use c++ ?
AC_ARG_WITH(cplusplus, [  --without-cplusplus  don't use c++],
	use_cplusplus=$withval, use_cplusplus=yes)
if test $use_cplusplus != 'no' -a $use_cplusplus != 'yes' ; then
	AC_MSG_ERROR(use --without-cplusplus or --with-cplusplus=no)
fi
if test $use_cplusplus = 'yes' ; then
  libs='$(lib) $(libxx)'
else
  libs='$(lib)'
fi
AC_SUBST(libs)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
if test $use_cplusplus = yes ; then
AC_PROG_CXX
AC_PROG_CXXCPP
fi
AC_PROG_LN_S
AC_PROG_RANLIB
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_CANONICAL_SYSTEM

. $srcdir/patchlevel
CXXSELFVER=$SELFVER

AC_ARG_ENABLE(debug, [  --enable-debug ])
dnl Set flags
if test "$GCC" = yes ; then
  if test "$enable_debug" = yes ; then
    CFLAGS="-g -Wall"
  else
    CFLAGS="-Wall"
  fi
  LD='$(LD)'
else
  case $build_os in
    ultrix*)
      if test "$enable_debug" = yes ; then
        CFLAGS="-std1 -g"
      else
        CFLAGS="-std1 -O2"
      fi
    ;;
    osf*)
      if test "$enable_debug" = yes ; then
        CFLAGS="-std1 -g -warnprotos -portable"
      else
        CFLAGS="-std1 -O4 -warnprotos -portable"
      fi
    ;;
  esac
  LD='$(CC) $(CFLAGS)'
fi

AC_SUBST(CFLAGS)
CXX_ANSI=0
if test $use_cplusplus = yes ; then
  if test "$GXX" = yes ; then
    CXXFLAGS="-ansi -D__STD_STRICT_ANSI"
    if test "$enable_debug" = yes ; then
      CXXFLAGS="$CXXFLAGS -g"
      dnl CXXFLAGS="$CXXFLAGS -g -Wall -Woverloaded-virtual"
    fi
    WERROR="-Werror"
    case $build_os in
      linux*)
        CPPFLAGS="-D_DEFAULT_SOURCE"
      ;;
    esac
    LDX='$(LD)'
  else
    WERROR=""
    case $build_os in
      ultrix*)
        if test "$enable_debug" = yes ; then
          CXXFLAGS="-g"
        else
          CXXFLAGS="-O2"
        fi
      ;;
      osf*)
        CXXFLAGS=""
        AC_MSG_CHECKING(for cxx version)
        AC_LANG_CPLUSPLUS
        AC_TRY_RUN([
          main()
            {
            int x;
            #ifdef __DECCXX_VER
              if (__DECCXX_VER>=60000000)
                x=0;
              else
                x=1;
            #else
            x=2;
            #endif
            exit(x);
            }
          ],
          cxxver=new,
          cxxver=old,
          cxxver=none
        )
        case $cxxver in
          new)
            AC_MSG_RESULT(6 or newer)
            CXXFLAGS="$CXXFLAGS -use_ld_input -std strict_ansi -nopure_cname"
            CXX_ANSI=1
            CXXSELFVER=`echo $SELFVER | sed 's/\./a\./'`
          ;;
          old)
            AC_MSG_RESULT(5 or older)
          ;;
          none)
            AC_MSG_RESULT(unknown)
          ;;
        esac
        if test "$enable_debug" = yes ; then
          CXXFLAGS="$CXXFLAGS -g"
        else
          CXXFLAGS="$CXXFLAGS -O2"
        fi
      ;;
    esac
    LDX='$(CXX) $(CXXFLAGS)'
  fi
fi
if test "$enable_debug" = yes ; then
	CXXFLAGS=$CXXFLAGS" -DDEBUG"
fi
AC_SUBST(CXXFLAGS)
AC_SUBST(LD)
AC_SUBST(LDX)

AC_LANG_C

dnl Check for shared objects
AC_MSG_CHECKING(whether we should create shared objects)
makeshared=false
case $target_os in
  x_netbsd*)
    CFLAGS=$CFLAGS" -fpic"
    LDOFLAGS='-shared'
    LDONONEFLAG=""
    SHLIBSUFFIX=.so
    makeshared=true
  ;;
  x_linux*)
    LDOFLAGS='-shared --whole-archive -rpath $(LIB_DIR)'
    LDONONEFLAG="--no-whole-archive"
    SHLIBSUFFIX=.so
    makeshared=true
  ;;
  x_osf*)
    LDOFLAGS='-shared -rpath $(LIB_DIR) -exact_version'
    LDOFLAGS=$LDOFLAGS' -set_version $(SELFVER)'
    LDOFLAGS=$LDOFLAGS' -error_unresolved'
    if test "$enable_debug" = yes ; then
      LDOFLAGS="$LDOFLAGS -g"
    fi
    LDONONEFLAG="-none"
    SHLIBSUFFIX=.so
    makeshared=true
  ;;
esac
if test $makeshared = true ; then
  AC_MSG_RESULT(yes)
  SLIBS='$(slibs)'
  LIBSUFFIX=$SHLIBSUFFIX
else
  AC_MSG_RESULT(no)
  LIBSUFFIX=.a
fi
AC_SUBST(SLIBS)
AC_SUBST(LDOFLAGS)
AC_SUBST(LDONONEFLAG)
AC_SUBST(SHLIBSUFFIX)
AC_SUBST(SELFVER)
AC_SUBST(COMMONVER)
AC_SUBST(CXXSELFVER)

AC_ARG_WITH(ems-libs, [  --with-ems-libs search first in this directory for ems libraries],
	emslibs=$withval, emslibs="")

EMS_SEARCH_COMMON
EMS_SEARCH_COMMONLIB(.$COMMONVER$LIBSUFFIX)

AC_SUBST(EMSCOMMON)
AC_SUBST(EMSEXCOMMON)
AC_SUBST(EMSCOMMONLIB)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(sys/time.h unistd.h sys/cdefs.h strings.h sys/select.h)
dnl AC_CHECK_HEADER(sys/cdefs.h,AC_DEFINE(HAVE_SYS_CDEFS_H))
dnl AC_CHECK_HEADER(strings.h,AC_DEFINE(HAVE_STRINGS_H)
AC_EGREP_CPP(sys_errlist,[#include <stdio.h>
#include <errno.h>],,AC_DEFINE(NEED_SYS_ERRLIST))

if test $use_cplusplus = 'yes' ; then
  AC_LANG_SAVE
  AC_LANG_CPLUSPLUS
  AC_MSG_CHECKING([whether gettimeofday() is defined])
  AC_CACHE_VAL(ems_cv_header_gettimeofday_def,
	  AC_EGREP_CPP(gettimeofday, [#include <sys/time.h>],
	  ems_cv_header_gettimeofday_def=yes, 
	  ems_cv_header_gettimeofday_def=no))
  AC_MSG_RESULT($ems_cv_header_gettimeofday_def)
  if test $ems_cv_header_gettimeofday_def = no ; then
      AC_DEFINE(NEED_GETTIMEOFDAYDEF)
  fi

  AC_MSG_CHECKING([whether gethostbyname() is properly defined])
  AC_CACHE_VAL(ems_cv_header_gethostbyname_def,
  AC_TRY_COMPILE([
  #include <sys/types.h>
  #include <netdb.h>], 
  [struct hostent *res;
  res=gethostbyname("mist");],
  ems_cv_header_gethostbyname_def=yes,
  ems_cv_header_gethostbyname_def=no))
  AC_MSG_RESULT($ems_cv_header_gethostbyname_def)
  if test $ems_cv_header_gethostbyname_def = no ; then
      AC_DEFINE(NEED_GETHOSTBYNAMEDEF)
  fi

  AC_MSG_CHECKING([whether gethostname() is defined])
  AC_CACHE_VAL(ems_cv_header_gethostname_def,
  AC_EGREP_CPP(gethostname, [#include <unistd.h>],
  ems_cv_header_gethostname_def=yes,
  ems_cv_header_gethostname_def=no))
  AC_MSG_RESULT($ems_cv_header_gethostname_def)
  if test $ems_cv_header_gethostname_def = no ; then
      AC_DEFINE(NEED_GETHOSTNAMEDEF)
  fi

  dnl Checks for ntohl()
  AC_MSG_CHECKING([whether ntohl() is properly defined])
  AC_CACHE_VAL(ems_cv_header_ntohl_def,
  AC_TRY_COMPILE([#include <sys/types.h>
  #include <netinet/in.h>], [
  unsigned int res;
  res=ntohl(17);
  ],
  ems_cv_header_ntohl_def=yes,
  ems_cv_header_ntohl_def=no))
  AC_MSG_RESULT($ems_cv_header_ntohl_def)
  if test $ems_cv_header_ntohl_def = no ; then
      AC_DEFINE(NEED_NTOHLDEF)
  fi

  AC_MSG_CHECKING([whether bzero() is defined])
  AC_CACHE_VAL(ems_cv_header_bzero_def,
  AC_EGREP_CPP(bzero, [#include <string.h>],
  ems_cv_header_bzero_def=yes,
  ems_cv_header_bzero_def=no))
  AC_MSG_RESULT($ems_cv_header_bzero_def)
  if test $ems_cv_header_bzero_def = no ; then
      AC_DEFINE(NEED_BZERODEF)
  fi

  AC_MSG_CHECKING([whether memset() is defined])
  AC_CACHE_VAL(ems_cv_header_memset_def,
  AC_EGREP_CPP(memset, [#include <string.h>],
  ems_cv_header_memset_def=yes,
  ems_cv_header_memset_def=no))
  AC_MSG_RESULT($ems_cv_header_memset_def)
  if test $ems_cv_header_memset_def = no ; then
      AC_DEFINE(NEED_MEMSETDEF)
  fi

  AC_MSG_CHECKING([whether select() is defined])
dnl AC_CACHE_VAL(ems_cv_header_select_def,
  AC_EGREP_CPP(select, [#include <sys/select.h>],
  ems_cv_header_select_def=yes,
  ems_cv_header_select_def=no)
  if test $ems_cv_header_select_def = no ; then
    AC_MSG_CHECKING([no, testing sys/time.h])
    AC_EGREP_CPP(select, [#include <sys/time.h>],
    ems_cv_header_select_def=yes,
    ems_cv_header_select_def=no)
  fi
dnl )
  AC_MSG_RESULT($ems_cv_header_select_def)
  if test $ems_cv_header_select_def = no ; then
      AC_DEFINE(NEED_SELECTDEF)
  fi

  AC_MSG_CHECKING([whether setsockopt() is defined])
  AC_CACHE_VAL(ems_cv_header_setsockopt_def,
  AC_EGREP_CPP(setsockopt, [#include <sys/socket.h>],
  ems_cv_header_setsockopt_def=yes,
  ems_cv_header_setsockopt_def=no))
  AC_MSG_RESULT($ems_cv_header_setsockopt_def)
  if test $ems_cv_header_setsockopt_def = no ; then
    AC_DEFINE(NEED_SETSOCKOPTDEF)
  fi

  AC_MSG_CHECKING([whether in_addr_t is defined])
  AC_CACHE_VAL(ems_cv_header_in_addr_t_def,
  AC_EGREP_CPP(in_addr_t, [#include <sys/types.h>
  #include<netinet/in.h>],
  ems_cv_header_in_addr_t_def=yes,
  ems_cv_header_in_addr_t_def=no))
  AC_MSG_RESULT($ems_cv_header_in_addr_t_def)
  if test $ems_cv_header_in_addr_t_def = no ; then
    AC_DEFINE(NEED_IN_ADDR_TDEF)
  fi

  AC_MSG_CHECKING([whether inet_addr() is properly defined])
  AC_CACHE_VAL(ems_cv_header_net_addr_def,
  AC_TRY_COMPILE([
  #include <sys/types.h>
  #include <netinet/in.h>
  #include <arpa/inet.h>], 
  [unsigned int res;
  res=inet_addr("1.2.3.4");],
  ems_cv_header_net_addr_def=yes,
  ems_cv_header_net_addr_def=no))
  AC_MSG_RESULT($ems_cv_header_net_addr_def)
  if test $ems_cv_header_net_addr_def = no ; then
    AC_DEFINE(NEED_INET_ADDRDEF)
  fi
  AC_LANG_RESTORE
fi
dnl Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_TIME
AC_C_CONST

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(gettimeofday select socket strerror bzero memset)

AC_DEFINE(HAVE_CONFIG_H)
AC_CONFIG_HEADER(config.h)
AC_OUTPUT(Makefile)
