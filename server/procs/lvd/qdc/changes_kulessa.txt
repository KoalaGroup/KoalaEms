Aenderungen fuer DQC-Scaler:

lvd_qdc_grp_coinc:
  keine

lvd_qdc_coinc[A-D]:
  [A-D] als drittes Argument von lvd_qdc_coinc

lvd_qdc_sc_rate:
  keine

lvd_qdc_read_scalers:
  optional: erster Kanal und Kanalanzahl

lvd_qdc_reset_sc_index:
  stattdessen lvd_qdc_clear_scalers mit optionaler Maske
  (oder habe ich eine andere Funktionalitaet von lvd_qdc_reset_sc_index
   uebersehen?)

scalers:
  ist noch nicht ausgereift;
  Die Dinger sind so grundverschieden vom 4434, dass Kompatibilitaet nicht
  sinnvoll scheint.
  Eigentlich sollte 'branch' nicht verwendet werden, es sollte ein 'ehrliches'
  IS existieren mit kompletter Memberliste.
  Die Idee:
  1. Init fuer die Kanalgruppen, die wirklich gebraucht werden
    a) fuer alle:
        init b -1 0 16 (oder einfach init -1)
    b) fuer wenige Kanaele in zwei Modulen
        init b 0 0 3 (init fuer drei Kanaele beginnend mit 0)
        init b 2 15 1 (init fuer den letzten Kanal)
  2. Auslese aller Kanaele:
        update_get b -1 0xffff
            liefert fuer 1a alle Kanaele und fuer 1b nur die initialisierten
     Auslese weniger Kanaele:
        update b (updated ALLE Kanaele (wegen Overflow))
        get b 0 0x1001 (liefert Daten von Kanal 0 und 3 aus Modul 0)

  Prozeduren:
    lvd_qdc_scalers_init
        setzt Scaler und Schattenregister auf 0 und markiert Scalerkanaele
        fuer Update
        Argumente: addr, Start und Anzahl
    lvd_qdc_scalers_clear
        cleared angegebene Module
        Argumente: addr (-1 fuer alle oder konkrete Liste)
    lvd_qdc_scalers_update
        dated alle Scaler up
    lvd_qdc_scalers_get
        liest die Schattenregister
        Argumente: addr und Maske
            (nur fuer die Kanaele, die auch in init angegeben wurden)
        Update muss vorher gemacht worden sein.
