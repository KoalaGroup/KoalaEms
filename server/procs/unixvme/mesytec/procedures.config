dnl procs/unixvme/mesytec/procedures.config
dnl $ZEL: procedures.config,v 1.5 2015/10/24 14:50:31 wuestner Exp $
dnl created 2011-07-05 h.xu

dnl madc32 32-channel QDC
dnl A32D16 (registers) A32D32/BLT32 (data buffer)
dnl reserves 65536 Byte
dnl proc(madc32init)
dnl proc(madc32start)
dnl proc(madc32convert)
proc(madc32reset)
dnl proc(madc32bitset2)
dnl proc(madc32bitres2)
dnl proc(madc32read)
dnl proc(madc32read_all)
proc(madc32read_one)
dnl proc(madc32flush)
dnl proc(madc32readblock)
dnl proc(madc32writethreshold)
dnl proc(madc32writethreshold2)
dnl proc(madc32readthreshold)
dnl proc(madc32writeslide)
dnl proc(madc32readslide)
dnl proc(madc32cblt)

dnl to be removed
dnl proc(madc32_init_single)
dnl proc(madc32_start_single)
dnl proc(madc32_stop)
dnl proc(madc32_read_single)

dnl MADC32, MTDC32, MQDC32
dnl ######################

dnl general initialisation
dnl ======================

dnl madc32_init idx ID resolution input_range marking_type sliding_scale
dnl     bank_operation skip_oorange
proc(madc32_init)

dnl mqdc32_init idx ID marking_type sliding_scale bank_operation skip_oorange
proc(mqdc32_init)

dnl mqdc32_offset idx bank offset
proc(mqdc32_offset)

dnl mqdc32_ignore_threshold idx 0|1
proc(mqdc32_ignore_threshold)

dnl mqdc32_gate_delay idx bank delay
proc(mqdc32_gate_delay)

dnl mqdc32_

dnl mtdc32_init idx ID resolution negative_edge marking_type output_format
dnl     bank_operation first_hit_only
proc(mtdc32_init)

dnl valid for madc32 and mqdc32
dnl mxdc32_threshold idx 32*thr
dnl mxdc32_threshold idx channel thr (channel may be -1)
proc(mxdc32_threshold)
proc(madc32_threshold)
proc(mqdc32_threshold)

dnl mtdc32_window idx bank start width source
proc(mtdc32_window)


dnl convenience functions
dnl =====================

dnl mxdc32_reg idx [val]
proc(mxdc32_reg)
proc(madc32_reg)
proc(mqdc32_reg)
proc(mtdc32_reg)


dnl preparation for readout
dnl =======================

dnl mxdc32_irq idx level vector irq_threshold (maximimum 956 words)
proc(mxdc32_irq)

dnl madc32_gate idx [bank delay width]
proc(madc32_gate)

dnl mqdc32_gate idx [???]
dnl proc(mqdc32_gate)

dnl mqdc32_fast_vme idx 0|1
proc(mqdc32_fast_vme)

dnl mxdc32_nimbusy idx val
proc(mxdc32_nimbusy)
dnl madc32_nimbusy idx val
proc(madc32_nimbusy)
dnl mqdc32_nimbusy idx val
proc(mqdc32_nimbusy)
dnl mtdc32_nimbusy idx val
proc(mtdc32_nimbusy)


dnl simple readout (single and multi event)
dnl =======================================

dnl mxdc32_start_simple idx multievent max_transfer_data
proc(mxdc32_start_simple)

dnl mxdc32_stop_simple idx
proc(mxdc32_stop_simple)

dnl mxdc32_read_simple idx max_words
proc(mxdc32_read_simple)


dnl readout with mcst [and cblt]
dnl ============================

dnl mxdc32_init_cblt [mcst_module [cblt_module]]
proc(mxdc32_init_cblt)

dnl mxdc32_start_cblt mcst_module multievent max_transfer_data
proc(mxdc32_start_cblt)

dnl mxdc32_stop_cblt mcst_module
proc(mxdc32_stop_cblt)

dnl mxdc32_read_mcst mcst_module  max_words
proc(mxdc32_read_mcst)

dnl mxdc32_read_cblt mcst_module cblt_module max_words_all
proc(mxdc32_read_cblt)


dnl statistics and debugging
dnl ========================

dnl mxdc32_init_statist should prepare an EMS variable for each IS
dnl the statistic storage for each individual module is set up automatically
dnl mxdc32_init_statist var
dnl proc(mxdc32_init_statist)

dnl proc(mxdc32_global_statist)
dnl proc(mxdc32_mod_statist)
proc(mxdc32_statist)

proc(madc32_status)
proc(mqdc32_status)
proc(mtdc32_status)


dnl MTDC32
dnl ######################

dnl general initialisation
dnl ======================


dnl mtdc32_trigger idx selection termination
proc(mtdc32_trigger)

dnl mtdc32_threshold idx bank value
proc(mtdc32_threshold)
