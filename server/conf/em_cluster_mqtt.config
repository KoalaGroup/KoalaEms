/*
 * $ZEL: em_cluster_mqtt.config,v 1.5 2017/11/02 19:47:30 wuestner Exp $
 * em_cluster_mqtt.config
 * 
 * created: 2014-09-08 PW
 */
#define PROCEDURES
#undef USE_AIO

isrodummys = DownloadReadoutList UploadReadoutList DeleteReadoutList EnableIS DisableIS GetISStatus
isdummys = $(isrodummys) CreateIS DeleteIS DownloadISModulList UploadISModulList DeleteISModulList GetISParams
procdummys = TestCommand DoCommand
vardummys = CreateVariable DeleteVariable ReadVariable WriteVariable GetVariableAttributes
pidummys = CreateProgramInvocation DeleteProgramInvocation StartProgramInvocation ResetProgramInvocation StopProgramInvocation ResumeProgramInvocation GetProgramInvocationAttr GetProgramInvocationParams
dodummys = WindDataout WriteDataout GetDataoutStatus EnableDataout DisableDataout
domdummys = DownloadDomain UploadDomain DeleteDomain
immerdummys = ResetISStatus Nothing
/*
 * prodummys = ProfileVED ProfileIS ProfileDI ProfileDO ProfilePI ProfileTR
 */

immerdummys += $(prodummys)

%define DEBUG
#define DEBUG

#define USE_MQTT
#define USE_MOSQUITTO

%define READOUT_PRIOR 100
%define MAX_DATAIN 20
%define MAX_DATAOUT 10

/*%define TAPEHANDLER "auftape"*/
%define CLUSTERBUFFER "emcluster"


#undef SMALL_COMPUTER

%undef  OUT_MAX

#ifdef SMALL_COMPUTER
%define CLUSTER_NUM 16
%define CLUSTER_MAX 536870912ULL    /* 2 GiByte */
%define EVENT_MAX   (CLUSTER_MAX/2) /* 1 GiByte */
%define OUT_MAX     ((ssize_t)(EVENT_MAX+16))
#else
%define CLUSTER_NUM 16
%define CLUSTER_MAX 2147483648ULL   /* 8 GiByte */
%define EVENT_MAX   (CLUSTER_MAX/2) /* 4 GiByte */
%define OUT_MAX     ((ssize_t)(EVENT_MAX+16))
#endif

%define CLUSTER_MALLOC

/*%define CLUSTERCHECK*/
%define SELECT_STATIST

dummyprocs = $(isdummys) $(vardummys) $(immerdummys)

objects = pi domain do

%define OBJ_DO

%define DATAOUT_MULTI

dataout = cluster
clusterdataouts = null socket /*tape*/ file
#ifdef USE_AIO
clusterdataouts += asynchfile
#endif
/*
%define CLUSTERCHECKSUM MD5
*/
%define CLUSTERTIMESTAMPS

%define DEFPORT 2048

%define OBJ_DOMAIN
%define DOM_DATAIN
%define DOM_DATAOUT
#if 0
%define DOM_EVENT
#endif

%define OBJ_PI
%define PI_READOUT
%define LOWLEVEL

/* datain = ringbuffer cluster stream opaque mqtt */
datain = cluster stream opaque
#ifdef USE_MQTT
datain += mqtt
#endif

commu = socket
%define SELECTCOMM
#if 0
domains = event datain dataout
#else
domains = datain dataout
#endif
invocations = readout_em_cluster
lowlevel = oscompat
#ifdef USE_AIO
lowlevel += asynch_io
%define AIO_BUFSIZE (4*1024*1024)
%define AIO_BUFNUM 128
#endif

extralibs    = -lm
#ifdef DEBUG
CFLAGS      += -g
extralflags += -g
#else
CFLAGS      += -O3 -Wuninitialized
#endif
#ifdef DMALLOC
extralibs   += -ldmalloc
#endif
#ifdef PROFILE
CFLAGS      += -pg
extralflags += -pg
#endif
#ifdef USE_AIO
extralibs   += -lrt
#endif
#ifdef USE_MOSQUITTO
extralibs   += -lmosquitto
extralflags += -pthread
#endif

#ifdef PROCEDURES
%define PROCS
/*%define PROCPROPS*/
procs = general
procs += dataout
procs += test
procs += internals/sched
/*procs += tape*/
#else
dummyprocs += $(procdummys)
#endif
