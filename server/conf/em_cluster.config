/*
 * $ZEL: em_cluster.config,v 1.23 2017/11/02 19:47:30 wuestner Exp $
 * em_cluster.config
 * 
 * 07.10.97
 */
#define PROCEDURES
#define JUMBOCLUSTER
#define USE_DDMA_EVENTS
#undef USE_AIO

isrodummys = DownloadReadoutList UploadReadoutList DeleteReadoutList EnableIS DisableIS GetISStatus
isdummys = $(isrodummys) CreateIS DeleteIS DownloadISModulList UploadISModulList DeleteISModulList GetISParams
procdummys = TestCommand DoCommand
vardummys = CreateVariable DeleteVariable ReadVariable WriteVariable GetVariableAttributes
pidummys = CreateProgramInvocation DeleteProgramInvocation StartProgramInvocation ResetProgramInvocation StopProgramInvocation ResumeProgramInvocation GetProgramInvocationAttr GetProgramInvocationParams
dodummys = WindDataout WriteDataout GetDataoutStatus EnableDataout DisableDataout
domdummys = DownloadDomain UploadDomain DeleteDomain
immerdummys = ResetISStatus Nothing
/*
 * prodummys = ProfileVED ProfileIS ProfileDI ProfileDO ProfilePI ProfileTR
 */

immerdummys += $(prodummys)

%define DEBUG

%define READOUT_PRIOR 100
%define MAX_DATAIN 20
%define MAX_DATAOUT 10

/*%define TAPEHANDLER "auftape"*/
%define CLUSTERBUFFER "emcluster"
%define CLUSTER_NUM 400

#ifdef USE_DDMA_EVENTS
%define CLUSTER_MAX 655360 /* 640 KiWords */
%define EVENT_MAX 524288   /* 512 KiWords */
#else
#  ifdef JUMBOCLUSTER
%define CLUSTER_MAX 262144
#  else
%define CLUSTER_MAX 16380
#  endif
%define EVENT_MAX (CLUSTER_MAX/2)
#endif

%define OUT_MAX (EVENT_MAX+16)

%define CLUSTER_MALLOC

/*%define CLUSTERCHECK*/
%define SELECT_STATIST

dummyprocs = $(isdummys) $(vardummys) $(immerdummys)

objects = pi domain do

%define OBJ_DO

%define DATAOUT_MULTI

dataout = cluster
clusterdataouts = null socket /*tape*/ file
#ifdef USE_AIO
clusterdataouts += asynchfile
#endif
/*
%define CLUSTERCHECKSUM MD5
*/
%define CLUSTERTIMESTAMPS

%define DEFPORT 2048

%define OBJ_DOMAIN
%define DOM_DATAIN
%define DOM_DATAOUT
#if 0
%define DOM_EVENT
#endif

%define OBJ_PI
%define PI_READOUT
%define LOWLEVEL

/* datain = ringbuffer cluster stream opaque mqtt */
datain = cluster opaque

commu = socket
%define SELECTCOMM
#if 0
domains = event datain dataout
#else
domains = datain dataout
#endif
invocations = readout_em_cluster
lowlevel = oscompat
#ifdef USE_AIO
lowlevel += asynch_io
%define AIO_BUFSIZE (4*1024*1024)
%define AIO_BUFNUM 128
#endif

extralibs    = -lm
#ifdef DEBUG
CFLAGS      += -g
extralflags += -g
#else
CFLAGS      += -O3 -Wuninitialized
#endif
#ifdef DMALLOC
extralibs   += -ldmalloc
#endif
#ifdef PROFILE
CFLAGS      += -pg
extralflags += -pg
#endif
#ifdef USE_AIO
extralibs   += -lrt
#endif

#ifdef PROCEDURES
%define PROCS
/*%define PROCPROPS*/
procs = general
procs += dataout
procs += test
procs += internals/sched
/*procs += tape*/
#else
dummyprocs += $(procdummys)
#endif
