Drivers:

Sources in ~peter/drivers
- copy the whole tree (with a tool which preserves symlinks (i.e. rsync))
- cd drivers/sis1100_cmc/sis1100
- create an empty directory (build/`uname -r`)
- cd to this directory
- create symbolic links from dev/pci:
    ln -s ../../dev/pci/*.[ch] .
    ln -s ../../dev/pci/Makefile .
- run 'make'
- copy sis1100.ko to /lib/modules/`uname -r`/extra
- run 'demode -a'

- change udev rules: add a file in /etc/udev/rules.d:
92-ems.rules:
KERNEL=="sis1100_*"             MODE="0660",    GROUP="ems"
KERNEL=="pcisync_*"             MODE="0660",    GROUP="ems"
KERNEL=="pcicam_*"              MODE="0660",    GROUP="ems"
KERNEL=="unipci_*"              MODE="0660",    GROUP="ems"
KERNEL=="x1100*"                MODE="0660",    GROUP="ems"
KERNEL=="plxsync_*"             MODE="0660",    GROUP="ems"
or
KERNEL=="sis1100_*"             MODE="0660",    OWNER="ems"

- load the drver: modprobe sis1100
- check syslog or output of dmesg


EMS Programs:

Sources in ~peter/ems
- copy part of the tree:
    commu support confsupp client proclib tcl_clientlib clientlib 
    events server common events++
- create an empty directory: mkdir ems/build
- cd build
- mkdir commu support client proclib tcl_clientlib clientlib \
    events server common events++
- compile:
    for i in common clientlib support proclib commu client events \
        events++ tcl_clientlib; do
    (cd $i; ../../$i/configure; make depend; make)
    done
- compile server:
    - create a directory with a name corresponding to the config file:
        mkdir cc_all
    - copy the script 'mache' to this directory
    - change to the dir and modify mache:
        SRCDIR has to point to the server sources
        --with-auxinc has to point to the driver sources
    - run 'mache neu'

