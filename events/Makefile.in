prefix = @prefix@
exec_prefix = @exec_prefix@
BIN_DIR = $(exec_prefix)/bin
COMMONVER    := @COMMONVER@
#CLIENTLIBVER := @CLIENTLIBVER@

srcdir = @srcdir@
VPATH = @srcdir@
@SET_MAKE@

machname = @target@

COMMON_INCLUDE = @EMSCOMMON@
COMMON_EX_INCLUDE = @EMSEXCOMMON@
COMMON_LIB = @EMSCOMMONLIB@
#CLIENTLIB_INCLUDE = @EMSCLIENT@
#CLIENTLIB_LIB = @EMSCLIENTLIB@

INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
RANLIB = @RANLIB@
LDFLAGS= -L$(COMMON_LIB) -lcommon.$(COMMONVER)
LIBSUFFIX := @LIBSUFFIX@

CC = @CC@
CPPFLAGS = @CPPFLAGS@ -I$(srcdir) -I. -I$(COMMON_INCLUDE)  \
	-I$(COMMON_EX_INCLUDE)  \
	-DHAVE_CONFIG_H
        #  -I$(CLIENTLIB_INCLUDE)

CFLAGS = -O3 -std=c99 -Werror -Wall -Wextra -Wuninitialized -Wcomment \
    -Wformat -Wimplicit -Wmissing-declarations -Wmissing-prototypes \
    -Wstrict-prototypes -Wparentheses -Wpointer-arith -Wreturn-type \
    -Wunused -Wno-sign-compare -Wno-unused-parameter -Wno-strict-aliasing

COMMONLIB   := -L$(COMMON_LIB) -lcommon.$(COMMONVER)
#CLIENTLIB   := -L$(CLIENTLIB_LIB) -lemscommxx.$(CLIENTLIBVER)

SOURCES := clusterdecoder.c cl2tape.c event_distributor.c cl2perfspect.c \
           clusterdump.c syncstatist3.c async_collector.c async_save.c \
           async2shm.c send_val2ems.c show_vacuum.c decode_vacuum.c \
           cluster_runnr.c cluster_header.c

EXECS := $(SOURCES:.c=)
USEFULLEXECS := clusterdump event_distributor async_collector async_save \
    async2shm send_val2ems show_vacuum decode_vacuum

.PHONY: all usefull
usefull: $(USEFULLEXECS)
all: $(EXECS)

% ::	$(srcdir)/%.m4
	m4 $(M4FLAGS) $< >$@

cluster_header: cluster_header.o
	$(CC) $^ $(LDFLAGS) -o $@

cluster_runnr: cluster_runnr.o
	$(CC) $^ $(LDFLAGS) -o $@

edm_decoder: edm_decoder.o
	$(CC) $(LDFLAGS) -o $@ $^

async_receive: async_receive.o
	$(CC) $(LDFLAGS) -o $@ $^

async_send: async_send.o
	$(CC) $(LDFLAGS) -o $@ $^

async_collector: async_collector.o normsock.o
	$(CC) $(LDFLAGS) -o $@ $^

async_save: async_save.o normsock.o
	$(CC) $(LDFLAGS) -o $@ $^

async2shm: async2shm.o normsock.o
	$(CC) $(LDFLAGS) -o $@ $^

send_val2ems: send_val2ems.o
	$(CC) $(LDFLAGS) -o $@ $^ $(COMMONLIB)

ems_metafiles: ems_metafiles.o makepath.o canonic_path.o
	$(CC) $(LDFLAGS) -o $@ $^ $(COMMONLIB)

clusterdump: clusterdump.o
	$(CC) $(LDFLAGS) -o $@ $^

day1dump: day1dump.o
	$(CC) $(LDFLAGS) -o $@ $^

syncstatist3: syncstatist3.o
	$(CC) $(LDFLAGS) -o $@ $^ -lm

ev2ev: ev2ev.o evmanip.o
	$(CC) $(LDFLAGS) -o $@ $^

clusterdecoder:	clusterdecoder.o read_procfile.o makepath.o canonic_path.o
	$(CC) $(LDFLAGS) -o $@ $^ $(COMMONLIB)

decode_f1_rss: decode_f1_rss.o
	$(CC) $(LDFLAGS) -o $@ $^ -lm

decode_f1_rss1: decode_f1_rss1.o
	$(CC) $(LDFLAGS) -o $@ $^ -lm

decode_f1_rss2: decode_f1_rss2.o
	$(CC) $(LDFLAGS) -o $@ $^ -lm

show_vacuum: show_vacuum.o
	$(CC) $(LDFLAGS) -o $@ $^ $(COMMONLIB)

decode_vacuum: decode_vacuum.o
	$(CC) $(LDFLAGS) -o $@ $^ $(COMMONLIB)

.PHONY: depend
depend: sed.in
	cp Makefile Makefile.bak
	sed -e '/^# DO NOT DELETE THIS LINE/,$$d' < Makefile.bak > Makefile
	echo '# DO NOT DELETE THIS LINE' >> Makefile
	echo ' ' >> Makefile
	for i in $(SOURCES) ; do \
	  echo checking $$i ; \
	  $(CC) -M $(CPPFLAGS) $(srcdir)/$$i|sed -f sed.in>> Makefile ; \
	done

sed.in:
	#echo 's|/usr/include/[^ ]*||g' >sed.in
	echo '/.*: $$/d' >>sed.in
	echo '/^ *\\ *$$/d' >>sed.in

clean:
	rm -f *.o $(EXECS) core sed.in

realclean: clean

distclean: realclean
	rm -f Makefile Makefile.bak config.cache config.log config.status config.h

install: all
	for i in $(EXECS) ; do \
		$(INSTALL) $$i $(BIN_DIR)/$$i ; \
	done
